<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on</title><link>https://blog.ikuamike.io/tags/git/</link><description>Recent content in Git on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 May 2024 00:25:15 +0300</lastBuildDate><atom:link href="https://blog.ikuamike.io/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>HTB Business CTF 2024 WriteUp - Misc</title><link>https://blog.ikuamike.io/posts/2024/htb_business_ctf_2024_misc/</link><pubDate>Wed, 22 May 2024 00:25:15 +0300</pubDate><guid>https://blog.ikuamike.io/posts/2024/htb_business_ctf_2024_misc/</guid><description>Introduction In this post, I&amp;rsquo;ll be covering solutions to the Misc Challenges from the HTB Business CTF 2024 .
1. Hidden Path This challenge was rated Easy. We are provided with files to download, allowing us to read the app&amp;rsquo;s source code.
On reading the code, we see that the app accepts user input on the /server_status endpoint. It takes in choice parameter and something else.
Initially I didn&amp;rsquo;t immediately pick this out but after looking closely, my code editor highlights that there is another parameter.</description><content>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this post, I&amp;rsquo;ll be covering solutions to the Misc Challenges from the &lt;a href="https://ctf.hackthebox.com/event/details/htb-business-ctf-2024-the-vault-of-hope-1474" target="_blank" rel="noopener">HTB Business CTF 2024&lt;/a>
.&lt;/p>
&lt;h3 id="1-hidden-path">1. Hidden Path&lt;/h3>
&lt;p>This challenge was rated &lt;strong>Easy&lt;/strong>. We are provided with files to download, allowing us to read the app&amp;rsquo;s source code.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/hidden_path_1.png" class="center" style="border-radius: 8px;" />
&lt;p>On reading the code, we see that the app accepts user input on the &lt;em>&lt;strong>/server_status&lt;/strong>&lt;/em> endpoint. It takes in &lt;em>&lt;strong>choice&lt;/strong>&lt;/em> parameter and something else.&lt;/p>
&lt;p>Initially I didn&amp;rsquo;t immediately pick this out but after looking closely, my code editor highlights that there is another parameter. Hovering my mouse over it revealed that it was the invisible unicode character U+3164. This character also appears to be also used in the array listing command choices that can be executed.&lt;/p>
&lt;p>What this means is that, we can supply a command to this character then select it as our command choice using the index in the array .&lt;/p>
&lt;p>I copied the unicode character from this &lt;a href="https://unicode-explorer.com/c/3164" target="_blank" rel="noopener">unicode-explorer&lt;/a>
link, then crafted my request as below in burp.ã…¤&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/hidden_path_2.png" class="center" style="border-radius: 8px;" />
&lt;p>Flag: &lt;strong>HTB{1nvi5IBl3_cH4r4cT3rS_n0t_sO_v1SIbL3_2b06cb9b519dd72e472ccdadda3917ce}&lt;/strong>&lt;/p>
&lt;h3 id="2-locked-away">2. Locked Away&lt;/h3>
&lt;p>This challenge was also rated &lt;strong>Easy&lt;/strong>. Here we are also provided the code. For the challenge.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/locked_away_1.png" class="center" style="border-radius: 8px;" />
&lt;p>As seen, our input will be checked against a blacklist then passed to exec command.&lt;/p>
&lt;p>Since exec will execute any python code we supply, we can override the blacklist list by assigning it something different rendering it useless then read the flag by calling the openchest function.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-py" data-lang="py">&lt;span style="display:flex;">&lt;span>blacklist &lt;span style="color:#f92672">=&lt;/span> str(&lt;span style="color:#ae81ff">1&lt;/span>),str(&lt;span style="color:#ae81ff">2&lt;/span>),str(&lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can also drop into a shell by import pty module.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/locked_away_2.png" class="center" style="border-radius: 8px;" />
&lt;p>Flag: &lt;strong>HTB{bYp4sSeD_tH3_fIlT3r5?_aLw4Ys_b3_c4RefUL!_ab204eba259a305414b338855f2fd91d}&lt;/strong>&lt;/p>
&lt;h3 id="3-zephyr">3. Zephyr&lt;/h3>
&lt;p>This challenge was rated &lt;strong>Medium&lt;/strong>. We are also provided with the challenge files.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/zephyr_1.png" class="center" style="border-radius: 8px;" />
&lt;p>On the terminal, when we navigate to the folder, we note that this is a git repo with only two files. My terminal prompt also picks up the main branch.&lt;/p>
&lt;p>Let&amp;rsquo;s check the commit history on the main branch.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>git --no-pager log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/zephyr_2.png" class="center" style="border-radius: 8px;" />
&lt;p>We only have 2 commits, lets view the modification using git diff.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>git --no-pager diff &lt;span style="color:#ae81ff">1501&lt;/span> ae4f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/zephyr_4.png" class="center" style="border-radius: 8px;" />
&lt;p>We see that only the &lt;em>&lt;strong>database.db&lt;/strong>&lt;/em> file has been modified. Let&amp;rsquo;s checkout the initial commit to view what sensitive info was removed.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/zephyr_3.png" class="center" style="border-radius: 8px;" />
&lt;p>From this initial commit, we get a piece of the flag: &lt;strong>_gOT_thE_DB_&lt;/strong>.&lt;/p>
&lt;p>Now let&amp;rsquo;s check if there are any other branches and switch to them.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/zephyr_5.png" class="center" style="border-radius: 8px;" />
&lt;p>On the &lt;em>&lt;strong>w4rri0r-changes&lt;/strong>&lt;/em> branch, we see there is a new commit. We can use &lt;em>git log&lt;/em> again but with &lt;em>-p&lt;/em> option to view the changes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>git --no-pager log -p
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/zephyr_6.png" class="center" style="border-radius: 8px;" />
&lt;p>We now have another piece of the flag: &lt;strong>HTB{g0t_tH3_p4s5&lt;/strong>.&lt;/p>
&lt;p>Finally, after some time going through the files trying to get the final piece. I discovered file changes in a git repo can also be stored in stash.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>git --no-pager stash show -p
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/htb_business_ctf_2024/misc/zephyr_7.png" class="center" style="border-radius: 8px;" />
&lt;p>After checking the stash, we now have the final piece of the flag: &lt;strong>g0T_TH3_sT4sH}&lt;/strong>.&lt;/p>
&lt;p>Flag: &lt;strong>HTB{g0t_tH3_p4s5_gOT_thE_DB_g0T_TH3_sT4sH}&lt;/strong>&lt;/p></content></item><item><title>Hack The Box: Bitlab</title><link>https://blog.ikuamike.io/posts/2020/bitlab-htb/</link><pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate><guid>https://blog.ikuamike.io/posts/2020/bitlab-htb/</guid><description>Summary As the name suggests this box had a instance of gitlab where the initial foothold involves getting credentials from obfuscated javascript and once logged into the gitlab instance we abuse webhooks to add our own code and execute it to get a reverse shell. Read on to see how I able to root the box.
Enumeration As usual I start with a quick nmap scan to find open ports and then run a second scan for service and version detection.</description><content>&lt;h1 id="summary">Summary&lt;/h1>
&lt;p>As the name suggests this box had a instance of gitlab where the initial foothold involves getting credentials from obfuscated javascript and once logged into the gitlab instance we abuse webhooks to add our own code and execute it to get a reverse shell. Read on to see how I able to root the box.&lt;/p>
&lt;h1 id="enumeration">Enumeration&lt;/h1>
&lt;p>As usual I start with a quick nmap scan to find open ports and then run a second scan for service and version detection.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>nmap -sS -p- --min-rate&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span> 10.10.10.114
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Nmap scan report &lt;span style="color:#66d9ef">for&lt;/span> 10.10.10.114
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host is up &lt;span style="color:#f92672">(&lt;/span>0.21s latency&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Not shown: &lt;span style="color:#ae81ff">65533&lt;/span> filtered ports
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PORT STATE SERVICE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>22/tcp open ssh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>80/tcp open http
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Thorough scan:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>nmap -Pn -sC -sV -p 22,80 -oA nmap/bitlab 10.10.10.114
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Nmap scan report &lt;span style="color:#66d9ef">for&lt;/span> 10.10.10.114
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host is up &lt;span style="color:#f92672">(&lt;/span>0.47s latency&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PORT STATE SERVICE VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 &lt;span style="color:#f92672">(&lt;/span>Ubuntu Linux; protocol 2.0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ssh-hostkey:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">2048&lt;/span> a2:3b:b0:dd:28:91:bf:e8:f9:30:82:31:23:2f:92:18 &lt;span style="color:#f92672">(&lt;/span>RSA&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">256&lt;/span> e6:3b:fb:b3:7f:9a:35:a8:bd:d0:27:7b:25:d4:ed:dc &lt;span style="color:#f92672">(&lt;/span>ECDSA&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_ &lt;span style="color:#ae81ff">256&lt;/span> c9:54:3d:91:01:78:03ðŸ†Ž16:14:6b:cc:f0:b7:3a:55 &lt;span style="color:#f92672">(&lt;/span>ED25519&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>80/tcp open http nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| http-robots.txt: &lt;span style="color:#ae81ff">55&lt;/span> disallowed entries &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">15&lt;/span> shown&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| / /autocomplete/users /search /api /admin /profile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| /dashboard /projects/new /groups/new /groups/*/edit /users /help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_/s/ /snippets/new /snippets/*/edit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_http-server-header: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| http-title: Sign in &lt;span style="color:#ae81ff">\x&lt;/span>C2&lt;span style="color:#ae81ff">\x&lt;/span>B7 GitLab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_Requested resource was http://10.10.10.114/users/sign_in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_http-trane-info: Problem with XML parsing of /evox/about
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="gitlab">Gitlab&lt;/h2>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-01.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>After trying out some simple combinations of username and password that didn&amp;rsquo;t work I decided to click on links on the home page and see if I&amp;rsquo;ll get a version number. When I opened the help link I got this.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-02.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>In bookmarks.html the links were normal apart from the last one which was javascript.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-03.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;!-- raw HTML omitted -->
&lt;p>The deobfuscated javascript shows a username and password.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">javascript&lt;/span>&lt;span style="color:#f92672">:&lt;/span> (&lt;span style="color:#66d9ef">function&lt;/span> ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">_0x4b18&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;user_login&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;getElementById&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;clave&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;user_password&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;11des0081x&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> document[&lt;span style="color:#a6e22e">_0x4b18&lt;/span>[&lt;span style="color:#ae81ff">2&lt;/span>]](&lt;span style="color:#a6e22e">_0x4b18&lt;/span>[&lt;span style="color:#ae81ff">1&lt;/span>])[&lt;span style="color:#a6e22e">_0x4b18&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>]] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">_0x4b18&lt;/span>[&lt;span style="color:#ae81ff">3&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> document[&lt;span style="color:#a6e22e">_0x4b18&lt;/span>[&lt;span style="color:#ae81ff">2&lt;/span>]](&lt;span style="color:#a6e22e">_0x4b18&lt;/span>[&lt;span style="color:#ae81ff">4&lt;/span>])[&lt;span style="color:#a6e22e">_0x4b18&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>]] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">_0x4b18&lt;/span>[&lt;span style="color:#ae81ff">5&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After logging in there are two projects.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-04.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>My user has Developer role on the Profile repo and Reporter role on the Deployer repo. I can&amp;rsquo;t edit the deployer but looking at the files the readme has a link about gitlab webhooks.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-05.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>In the index.php the part that caught my eye is the if statement. If that condition is true, a command to change directory is run and then a git pull.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-06.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>Based on the name of the script we can guess it deploys changes made to the profile repo after a merge request is made. Since it pulls to /profile this is probably the directory where it&amp;rsquo;s hosted. We can verify this by going to /profile.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-07.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;h3 id="getting-shell">Getting Shell&lt;/h3>
&lt;p>I&amp;rsquo;ll add a php file to the profile repo that will give me a reverse shell on the server. I will need to also create a pull request with my new file and merge it, this will create a webhook to the deployer script and it will download it on the web server, allowing me to execute it.&lt;/p>
&lt;p>Adding reverse shell php file:&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-08.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>Merging the request:&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-09.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>The file is successfully added to master branch:&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-10.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>Finally got my shell by visiting 10.10.10.114/profile/shell.php on my browser:&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-11.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;h2 id="getting-user">Getting User&lt;/h2>
&lt;p>The user.txt is only readable the clave user. After a bit of local enumeration and getting stuck I decided to go back to the gitlab instance to see if I may have missed anything. I found a snippet mentioning postgresql and a db connection script.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-12.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>Checking on the server we indeed have a postgresql instance running locally on port 5432.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-13.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>After some tweaking I was able to get a script working that would read the db.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;host = 127.0.0.1&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $port &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;port = 5432&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $dbname &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;dbname = profiles&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $credentials &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user = profiles password=profiles&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $db &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">pg_connect&lt;/span>( &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">$host&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">$port&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">$dbname&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">$credentials&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>$db) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Error : Unable to open database&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Opened database successfully&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $sql &lt;span style="color:#f92672">=&amp;lt;&amp;lt;&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#a6e22e">profiles&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">EOF&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">pg_query&lt;/span>($db, $sql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>$ret) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">pg_last_error&lt;/span>($db);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">exit&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span>($row &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">pg_fetch_row&lt;/span>($ret)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span> $row[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span> $row[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span> $row[&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Operation done successfully&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pg_close&lt;/span>($db);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the db I found a password which appears to be base64 encoded but the trick was to use it as it is and not decode it for it to work.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-15.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;h2 id="getting-root">Getting Root&lt;/h2>
&lt;p>This part was interesting as I had never heard of this technique before. The user www-data had sudo rights to run git pull.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-16.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>In git there are scripts called git hooks which can run automatically before or after git actions like commits. You can configure them in .git/hooks. For this case I&amp;rsquo;ll use &lt;strong>post-merge&lt;/strong> since when git pull is run a merge action is done.&lt;/p>
&lt;p>Since we can&amp;rsquo;t edit the current folder copy the profile repo to a world writeable directory like /tmp and create the post-merge script in hooks, the script will give a reverse shell.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>cp -r /var/www/html/profile /tmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-17.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>After making this file executable, we just have to make any change to the repo on the gitlab instance like creating a txt file and make sure we merge it to master. Once that is done, we can run sudo git pull and get a root reverse shell.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/bitlab/bitlab-18.png" alt="gitlab instance" class="center" style="border-radius: 8px;" />
&lt;p>As you may have noticed since we used the www-data user to get root, we would have skipped the getting user path using the postgresql db and read user.txt from the root user.&lt;/p></content></item></channel></rss>