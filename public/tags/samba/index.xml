<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Samba on ikuamike</title>
    <link>https://blog.ikuamike.io/tags/samba/</link>
    <description>Recent content in Samba on ikuamike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Michael Ikua</copyright>
    <lastBuildDate>Wed, 10 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.ikuamike.io/tags/samba/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vulnhub: Symfonos 2</title>
      <link>https://blog.ikuamike.io/posts/2021/symfonos2/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ikuamike.io/posts/2021/symfonos2/</guid>
      <description></description>
      <content>&lt;img src=&#34;https://blog.ikuamike.io/img/symfonos1/symfonos1.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Difficulty&lt;/th&gt;
&lt;th&gt;Release Date&lt;/th&gt;
&lt;th&gt;Author&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Intermediate&lt;/td&gt;
&lt;td&gt;18 July 2019&lt;/td&gt;
&lt;td&gt;Zayotic&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;summary&#34;&gt;Summary&lt;/h1&gt;
&lt;p&gt;This box had quite a good number of misconfigurations and vulnerabilities. Initial access was through copying a shadow
backup file to a smb share accessible anonymously using a file copy vulnerability in proftpd. Then lateral movement
and privilege escalation was achieved by exploiting rce a locally running librenms instance and finally abusing
sudo permissions on mysql to get root.&lt;/p&gt;
&lt;h1 id=&#34;reconnaissance&#34;&gt;Reconnaissance&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;Nmap scan report for 192.168.191.129
Host is up (0.00028s latency).

PORT    STATE SERVICE     VERSION
21/tcp  open  ftp         ProFTPD 1.3.5
22/tcp  open  ssh         OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)
| ssh-hostkey:
|   2048 9d:f8:5f:87:20:e5:8c:fa:68:47:7d:71:62:08:ad:b9 (RSA)
|   256 04:2a:bb:06:56:ea:d1:93:1c:d2:78:0a:00:46:9d:85 (ECDSA)
|_  256 28:ad:ac:dc:7e:2a:1c:f6:4c:6b:47:f2:d6:22:5b:52 (ED25519)
80/tcp  open  http        WebFS httpd 1.21
|_http-server-header: webfs/1.21
|_http-title: Site doesn&#39;t have a title (text/html).
139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp open  netbios-ssn Samba smbd 4.5.16-Debian (workgroup: WORKGROUP)
Service Info: Host: SYMFONOS2; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
|_clock-skew: mean: 2h00m00s, deviation: 3h27m51s, median: 0s
|_nbstat: NetBIOS name: SYMFONOS2, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &amp;lt;unknown&amp;gt; (unknown)
| smb-os-discovery:
|   OS: Windows 6.1 (Samba 4.5.16-Debian)
|   Computer name: symfonos2
|   NetBIOS computer name: SYMFONOS2\x00
|   Domain name: \x00
|   FQDN: symfonos2
|_  System time: 2021-01-25T07:02:21-06:00
| smb-security-mode:
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode:
|   2.02:
|_    Message signing enabled but not required
| smb2-time:
|   date: 2021-01-25T13:02:21
|_  start_date: N/A
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;enumeration&#34;&gt;Enumeration&lt;/h1&gt;
&lt;h2 id=&#34;samba-139445&#34;&gt;Samba (139/445)&lt;/h2&gt;
&lt;p&gt;Running smbmap on the target we see we can access the &lt;strong&gt;anonymous&lt;/strong&gt; share without credentials:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;smbmap -R -H 192.168.191.129
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/smbmap.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;Using smbclient to download log.txt from the anonymous share.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;smbclient &lt;span style=&#34;color:#ae81ff&#34;&gt;\\\\&lt;/span&gt;192.168.191.129&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;anonymous -N -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;get backups\log.txt log.txt&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From log.txt, we discover a backup of the shadow file is created in /var/backups/&lt;/p&gt;

  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-1.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;h2 id=&#34;ftp-21&#34;&gt;FTP (21)&lt;/h2&gt;
&lt;p&gt;Checking for known vulnerabilities of the proftp version using searchsploit, we find several.&lt;/p&gt;

  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-2.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;The command execution exploits available rely on creating a php file on the existing webserver that would be executed.
However, the web server is running &lt;a href=&#34;https://github.com/ourway/webfsd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;webfs&lt;/a&gt;

 which only serves static content.&lt;/p&gt;
&lt;p&gt;We can only take advantage of the file copy vulnerability. From log.txt, the smb configuration gives the location
of the anonymous share:&lt;/p&gt;

  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-3.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;We can exfiltrate information to the anonymous share by exploiting file copy on proftpd. Using the PoC shown here
&lt;a href=&#34;https://www.exploit-db.com/exploits/36742,&#34;&gt;https://www.exploit-db.com/exploits/36742,&lt;/a&gt; let&amp;rsquo;s get the shadow.bak file. You can either use netcat or telnet.
In this case I use netcat.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;nc -vn 192.168.191.129 &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-4.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;Running smbmap command again we see that we have shadow.bak file.&lt;/p&gt;

  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-5.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;h2 id=&#34;shell-as-aeolus&#34;&gt;Shell as aeolus&lt;/h2&gt;
&lt;p&gt;After downloading the shadow file from the smb we can crack it with john and rockyou wordlist.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;john --wordlist&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/share/wordlists/rockyou.txt shadow.bak
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-6.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;Using sergioteamo as the password we can access ssh as aeolus.&lt;/p&gt;
&lt;p&gt;Doing some basic manual enumeration, we see some ports listening on localhost.&lt;/p&gt;

  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-7.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;8080 would most likely be a webserver, so I&amp;rsquo;ll tunnel to it first using an ssh port forward.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ssh -L 8000:127.0.0.1:8080 aeolus@192.168.191.129
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When we visit http://127.0.0.1:8000 on the browser, we find that LibreNMS is running here.&lt;/p&gt;

  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-8.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;Using searchsploit again we find two existing vulnerabilities for version 1.46.&lt;/p&gt;

  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-13.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;Since we can&amp;rsquo;t verify the version of librenms currently running, we&amp;rsquo;ll try the exploits and see if they work. I&amp;rsquo;ll go for the RCE.&lt;/p&gt;
&lt;p&gt;Using the exploit script provided here &lt;a href=&#34;https://www.exploit-db.com/exploits/47044,&#34;&gt;https://www.exploit-db.com/exploits/47044,&lt;/a&gt; we need to provide url, session cookies,
rhost and rport where the reverse shell will be received.&lt;/p&gt;
&lt;p&gt;Login using the earlier discovered credentials &lt;strong&gt;aeolus : sergioteamo&lt;/strong&gt;, then retrieve the cookies using burpsuite.&lt;/p&gt;

  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-10.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;Run the exploit as below and catch the reverse shell using netcat.&lt;/p&gt;

  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-11.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;We are now the cronus user.&lt;/p&gt;
&lt;h2 id=&#34;getting-a-root-shell&#34;&gt;Getting a root shell&lt;/h2&gt;
&lt;p&gt;Running sudo -l reveals cronus can run mysql as root with no password.&lt;/p&gt;
&lt;p&gt;Dropping into mysql as root user, we can get a root shell using the below command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\!&lt;/span&gt; bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;img src=&#34;https://blog.ikuamike.io/img/symfonos2/symfonos2-12.png&#34;  alt=&#34;symfonos&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;You can reach/follow me on Twitter if you have some feedback or questions.&lt;/p&gt;
&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/ikuamike&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ikuamike&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Github: &lt;a href=&#34;https://github.com/ikuamike&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ikuamike&lt;/a&gt;

&lt;/p&gt;</content>
    </item>
    
  </channel>
</rss>
